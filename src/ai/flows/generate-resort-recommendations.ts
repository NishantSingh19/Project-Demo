// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Personalized resort recommendations based on occasion, preferences, and budget.
 *
 * - generateResortRecommendations - A function that generates personalized resort recommendations.
 * - GenerateResortRecommendationsInput - The input type for the generateResortRecommendations function.
 * - GenerateResortRecommendationsOutput - The return type for the generateResortRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateResortRecommendationsInputSchema = z.object({
  occasion: z.string().describe('The occasion for the stay (e.g., honeymoon, family vacation).'),
  preferences: z.string().describe('User preferences for the resort (e.g., beachfront, spa, activities).'),
  budget: z.string().describe('The user\u2019s budget for the stay (e.g., luxury, mid-range, budget-friendly).'),
});
export type GenerateResortRecommendationsInput = z.infer<typeof GenerateResortRecommendationsInputSchema>;

const GenerateResortRecommendationsOutputSchema = z.object({
  recommendations: z.array(
    z.object({
      resortName: z.string().describe('The name of the recommended resort.'),
      description: z.string().describe('A description of the resort and why it is recommended.'),
    })
  ).describe('A list of personalized resort recommendations.'),
});
export type GenerateResortRecommendationsOutput = z.infer<typeof GenerateResortRecommendationsOutputSchema>;

export async function generateResortRecommendations(input: GenerateResortRecommendationsInput): Promise<GenerateResortRecommendationsOutput> {
  return generateResortRecommendationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateResortRecommendationsPrompt',
  input: {schema: GenerateResortRecommendationsInputSchema},
  output: {schema: GenerateResortRecommendationsOutputSchema},
  prompt: `You are an expert travel agent specializing in resort recommendations.

  Based on the occasion, preferences, and budget, provide a list of personalized resort recommendations.

  Occasion: {{{occasion}}}
  Preferences: {{{preferences}}}
  Budget: {{{budget}}}

  Format your output as a JSON array of resorts. Each resort entry should have a resortName and a description, explaining why it is a good fit based on the user input.
  `,
});

const generateResortRecommendationsFlow = ai.defineFlow(
  {
    name: 'generateResortRecommendationsFlow',
    inputSchema: GenerateResortRecommendationsInputSchema,
    outputSchema: GenerateResortRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
